q()
library(xlsx)
library(rJava)
install.packages("httr")
library(httr)
?httr
oauth_endpoints("github")
?oauth_app
myapp <- oauth_app("github","7e6d9b4893d85cbd602b", "62a3e0b3b4cfe95151f2a35cd4c80a3293e53db2")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
myapp <- oauth_app("github","7e6d9b4893d85cbd602b","62a3e0b3b4cfe95151f2a35cd4c80a3293e53db2")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
library(httpuv)
install.packages("httpuv")
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github","7e6d9b4893d85cbd602b","62a3e0b3b4cfe95151f2a35cd4c80a3293e53db2")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
stop_for_status(req)
myapp <- oauth_app("github","62a3e0b3b4cfe95151f2a35cd4c80a3293e53db2")
myapp <- oauth_app("github","7e6d9b4893d85cbd602b")
myapp <- oauth_app("github",key="Client ID",secret = "CLIENT SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",key="Client ID",secret = "CLIENT SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache=FALSE)
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github",key="Client ID",secret = "CLIENT SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache=FALSE)
# myapp <- oauth_app("github",key="Client ID",secret = "CLIENT SECRET")
myapp <- oauth_app("github",key="7e6d9b4893d85cbd602b",secret = "62a3e0b3b4cfe95151f2a35cd4c80a3293e53db2")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache=FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
head(req$created_at)
View(req)
attributes(req)
req$date
req
View(req)
dim(req)
json1=content(req)
json2=jsonlite::fromJSON(toJSON(json1))
install.packages("jsonlite")
install.packages("jsonlite")
json2=jsonlite::fromJSON(toJSON(json1))
df<-fromJSON(json1)
library(jsonlite)
json2=jsonlite::fromJSON(toJSON(json1))
head(json2)
View(json2)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("jsonlite")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
head(htmlCode)
nchar(htmlCode[10,])
nchar(htmlCode[10,1])
nchar(htmlCode)
nchar(htmlCode[,10])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
acs<-read.csv("./getdata-data-ss06hid.csv")
setwd(C:\Users\Chris\Documents\GitHub\Coursera_getting_data\quiz4)
setwd("C:\Users\Chris\Documents\GitHub\Coursera_getting_data\quiz4")
setwd("C:/Users/Chris/Documents/GitHub/Coursera_getting_data/quiz4/")
dir()
acs<-read.csv("./getdata-data-ss06hid.csv")
head(acs$"AGS")
head(acs$names)
names(acs)
?strsplit
nameslist<-strsplit(names(acs),"wgtp")
head(nameslist)
nameslist2<-as.vector(strsplit(names(acs),"wgtp"))
head(nameslist2)
nameslist[[123]]
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",skip=5,nrows=190,header=FALSE,stringsAsFactors=FALSE)
head(gdp)
tail(gdp)
gdp2<-cbind(Source="gdp",gdp)
head(gdp)
gdp<-cbind(Source="gdp",gdp)
head(gdp)
tail(gdp)
gdp$dollars<-gsub(",","",gdp$V5)
class(gdp$dollars)
gdp$dollars<-as.numeric(gsub(",","",gdp$V5))
class(gdp$dollars)
head(gdp$dollars)
mean(gdp$dollars)
grep("^United",countryNames)
gdp(names)
names(gdp)
head(gdp)
names(gdp$V4)
attr(gdp$V4,"names")
attr(gdp,"names")
names(gdp)[names(gdp)=="V4"]<-"countryNames"
attr(gdp,"names")
grep("^United",countryNames)
grep("^United",gdp&countryNames)
grep("^United",gdp$countryNames)
count(grep("^United",gdp$countryNames))
nrows(grep("^United",gdp$countryNames))
n_rows(grep("^United",gdp$countryNames))
grep("^United",gdp$countryNames)
library(plyr)
ed<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",stringsAsFactors=FALSE)
head(ed[,1:4])
combine<-merge(ed,gdp,by.x="CountryCode",by.y="V1")
head(combine[,c("CountryCode","Short.Name","V4")])
head(combine[,c("CountryCode","Short.Name","countryNames")])
nrow(combine)  ## number of rows in the combined data
names(combine)
View(combine)
grep("[Ff]iscal year end",gdp$countryNames)
grep("[Ff]iscal year end",gdp$Special.Notes)
grep("*[Ff]iscal year end*",gdp$Special.Notes)
grep("*[Ff]iscal*",gdp$Special.Notes)
grep("^United",gdp$countryNames)
grep("*[Ff]iscal*",combine$Special.Notes)
grep("*[Ff]iscal*June",combine$Special.Notes)
grep("*[Ff]iscal*June*",combine$Special.Notes)
combine[grep("*[Ff]iscal*June*",combine$Special.Notes)]
combine[grep("*[Ff]iscal*",combine$Special.Notes)]
combine[grep("*[Ff]iscal*",combine$Special.Notes),]
combine2<-combine[grep("*[Ff]iscal*",combine$Special.Notes),]
View(combine2)
combine2<-combine[grep("[Ff]iscal",combine$Special.Notes),]
dim(combine2)
combine2<-combine[grep("^[Ff]iscal",combine$Special.Notes),]
dim(combine2)
combine2<-combine[grep("^[Ff]iscal.*2004",combine$Special.Notes),]
dim(combine2)
combine2<-combine[grep("^[Ff]iscal.*June",combine$Special.Notes),]
dim(combine2)
View(combine2)
